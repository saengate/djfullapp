#!/bin/bash

NAME_APP=project                                        # This name will be visible for ps command
DJANGODIR=/var/www/project
VENV=/opt/venv/bin
USER=root                                             # the user to run as
GROUP=root                                            # the group to run as
NUM_WORKERS=$((2 * $(getconf _NPROCESSORS_ONLN) + 1))   # how many worker processes should Gunicorn spawn
NUM_CPU=$(getconf _NPROCESSORS_ONLN)
MAX_REQUESTS=$((1000 * $(getconf _NPROCESSORS_ONLN)))
MAX_REQUESTS_JITTER=$((1000 * $(getconf _NPROCESSORS_ONLN) / 2))
DJANGO_SETTINGS_MODULE=config.settings
DJANGO_WSGI_MODULE=config.wsgi:application

echo "Starting $NAME as `whoami`"

source $VENV/activate

export DJANGO_SETTINGS_MODULE=$DJANGO_SETTINGS_MODULE
export PYTHONPATH=$DJANGODIR:$PYTHONPATH

# Kill previous gunicorn instances running in 8002 port
# kill -9 $(lsof -i:8002 -t) 2> /dev/null

# Start your Django Unicorn
# Programs meant to be run under supervisor should not daemonize themselves (do not use --daemon)
exec $VENV/gunicorn ${DJANGO_WSGI_MODULE} \
  --name $NAME_APP \
  --threads $NUM_CPU \
  --workers $NUM_WORKERS \
  --worker-class gevent \
  --graceful-timeout 40 \
  --worker-connections=1000 \
  --max-requests $MAX_REQUESTS \
  --max-requests-jitter $MAX_REQUESTS_JITTER \
  --user=$USER --group=$GROUP \
  --bind=unix:/tmp/django.socket \
  --timeout=1800 \
  --log-level=debug \
  --log-file=-
